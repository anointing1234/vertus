"""
Django settings for vertus_hotels project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import environ
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()


environ.Env.read_env(os.path.join(BASE_DIR,'file.env'))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e&-luv@spxwdqa*r=#trru=fbg9962k$te!hmrq$6r_xe@m$e5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ["*"]
ALLOWED_HOSTS = ["vertushotel.online"]
CSRF_TRUSTED_ORIGINS = ["https://vertushotel.online"]


# Application definition
AUTH_USER_MODEL = 'accounts.Account'




INSTALLED_APPS = [
    "unfold",
    "unfold.contrib.filters",
    "unfold.contrib.import_export",
    "unfold.contrib.guardian",
    "unfold.contrib.simple_history",
    "unfold.contrib.forms",
    "unfold.contrib.inlines",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'phonenumber_field',     # for PhoneNumberField
    'django_countries',      # for CountryField
    'multiselectfield',      # for MultiSelectField
    'accounts',
    'vetus',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vertus_hotels.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vertus_hotels.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),  
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL = '/media/'

# if DEBUG:
STATICFILES_DIRS = [os.path.join(BASE_DIR,'static')]
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# else:
STATIC_ROOT = os.path.join(BASE_DIR,'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


EMAIL_BACKEND      = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST         = 'smtp.zoho.eu'       # or smtp.zoho.com
EMAIL_PORT         = 465
EMAIL_USE_TLS      = False
EMAIL_USE_SSL      = True
EMAIL_HOST_USER    = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD= env('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = "yakubudestiny9@gmail.com"



UNFOLD = {
    # ———————————————————————————————————————————————————————————————————————
    # Branding & Header
    # ———————————————————————————————————————————————————————————————————————
    "SITE_HEADER":    "Vertus Hotel & Suites Admin",
    "SITE_TITLE":     "Vertus Hotel & Suites Admin",
    "SITE_SUBHEADER": "Manage Your Hotel & Website",
    "SITE_URL":       "/admin/",
    "SITE_ICON": {
        "light": lambda request: static("images/logo-2.png"),
        "dark":  lambda request: static("images/logo.png"),
    },
    "SITE_LOGO": {
        "light": lambda request: static("images/logo-2.png"),
        "dark":  lambda request: static("images/logo.png"),
    },
    "STYLES": [
        lambda request: static("css/admin-logo.css"),
    ],

    # ———————————————————————————————————————————————————————————————————————
    # Dashboard Cards
    # ———————————————————————————————————————————————————————————————————————
    "DASHBOARD": {
        "show_search": True,
        "cards": [
            {
                "title": _("Users"),
                "icon": "account_circle",
                "link": reverse_lazy("admin:accounts_account_changelist"),
                "description": _("Manage registered hotel staff and customers."),
            },
            {
                "title": _("Rooms"),
                "icon": "hotel",
                "link": reverse_lazy("admin:accounts_room_changelist"),
                "description": _("Add, edit, and remove rooms and pricing."),
            },
            {
                "title": _("Facilities"),
                "icon": "pool",
                "link": reverse_lazy("admin:accounts_facility_changelist"),
                "description": _("Configure hotel facilities and amenities."),
            },
        ],
    },

    # ———————————————————————————————————————————————————————————————————————
    # Sidebar Navigation
    # ———————————————————————————————————————————————————————————————————————
    "SIDEBAR": {
        "show_search": True,
        "navigation": [
            {
                "title": _("User Management"),
                "icon": "people",
                "collapsible": False,
                "items": [
                    {
                        "title": _("Accounts"),
                        "icon": "account_circle",
                        "link": reverse_lazy("admin:accounts_account_changelist"),
                    },
                ],
            },
            {
                "title": _("Hotel Management"),
                "icon": "hotel",
                "collapsible": True,
                "items": [
                    {
                        "title": _("Rooms"),
                        "icon": "king_bed",
                        "link": reverse_lazy("admin:accounts_room_changelist"),
                    },
                    {
                        "title": _("Facilities"),
                        "icon": "local_activity",
                        "link": reverse_lazy("admin:accounts_facility_changelist"),
                    },
                ],
            },
        ],
    },
}
